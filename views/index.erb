<%- require 'html_truncator'
		# If total_pages == -1, we are displaying the single post page -%>
<%- if total_pages == -1
			# Explained the total_pages == -1 check in app.rb
			date_matches = post[:datetime].match(/(\d{4})-(\d{2})-(\d{2})-(\d{4})/)
			date = Date.new(date_matches[1].to_i, date_matches[2].to_i, date_matches[3].to_i).to_time.utc.to_i

			reading_time = post[:body].reading_time(format: :approx)
			content = _markdown(post[:body].lines.join) -%>
	<%= erb :post, locals: { date: date, title: post[:title], content: content, link: post[:link], reading_time: reading_time } -%>
<%- else
			posts.each do |post|
				date_matches = post[:datetime].match(/(\d{4})-(\d{2})-(\d{2})-(\d{4})/)
				date = Date.new(date_matches[1].to_i, date_matches[2].to_i, date_matches[3].to_i).to_time.utc.to_i

				reading_time = post[:body].reading_time(format: :approx)
				# So the ellipsis goes inside the code block, if it ends in one, for better appearance
				HTML_Truncator.ellipsable_tags << 'pre'
				content = HTML_Truncator.truncate(_markdown(post[:body].lines.join),
				                                  100, ' [...]')
				# We don't add the Continue reading inside the custom ellipsis
				# because it will be added inside the code blocks as well
				if content.html_truncated?
					content += "<br/><a href='/#{post[:link]}' onClick='_gaq.push(['_trackEvent', 'continue-reading', 'click', '#{post[:link]}']);'>Continue reading &rarr;</a>"
				end

				title = post[:title]

				search_terms ||= [] # If search_terms have been passed, we are on search mode
				search_terms.each do |w|
					if content.downcase.index(w)
						start_index = content.downcase.index(w)
						end_index = start_index + w.length
						# This is how the search term is written inside the post's text. We search by downcasing it.
						original_occurrence = content[start_index..end_index - 1]
						content.gsub!(/#{original_occurrence}/i, '<mark class=\'search\'>\0</mark>')

						content.scan(/href=".*?"/).each do |s|
							edited_link = s.gsub('<mark class=\'search\'>', '')
							edited_link.gsub!('</mark>', '')
							content.gsub!(s, edited_link)
						end

						content.scan(/\/assets\/.*?"/).each do |s|
							edited_link = s.gsub('<mark class=\'search\'>', '')
							edited_link.gsub!('</mark>', '')
							content.gsub!(s, edited_link)
						end
					end

					if title.downcase.index(w)
						start_index = title.downcase.index(w)
						end_index = start_index + w.length
						# This is how the search term is written inside the post's text. We search by downcasing it.
						original_occurrence = title[start_index..end_index - 1]
						title.gsub!(/#{original_occurrence}/i, '<span class=\'search-mark\'>\0</span>')
					end
				end -%>
		<%=	erb :post, locals: { date: date, title: title, content: content, link: post[:link], reading_time: reading_time } -%>
	<%- end -%>
	<%- # total_pages == 1 when we are searching -%>
	<%- if total_pages > 1 -%>
		<nav class="pagination">
			<%- if page > 1 -%>
				<%- if page == 2 -%>
					<a class="previous" href="/" rel="previous">&larr; Prev</a>
				<%- else -%>
					<a class="previous" href="/<%= page - 1 -%>" rel="previous">&larr; Prev</a>
				<%- end -%>
			<%- else -%>
				<span class="disabled">&larr; Prev</span>
			<%- end -%>

			<%- if page > gap -%>
				<a href="/">1</a>
				<%- # If page == gap * 2, the gap is redundant; it would display, for example, 1 2 ... 3 4 -%>
				<%- if page == gap * 2 -%>
					<a href="/2">2</a>
				<%- else %>
					<%- # Since we always display first page and prev page + current page, the gap is redundant if page <= gap * 2
							# it would display, for example, 1 2 ... 3 4. Also, showing 1 2 ... 4 5 takes same space as 1 2 3 4 5.-%>
					<%- if page > gap * 2 -%>
						<span class="gap">&hellip;</span>
					<%- end -%>
				<%- end -%>
			<%- end -%>

			<%- # If current page is 2, prev button links to / instead of /1 -%>
			<%- # Also prev pagination-number links to / instead of current page - 1 -%>
			<%- if page > 1 -%>
				<%- if page == 2 -%>
					<a href="/" rel="previous"><%= page - 1 -%></a>
				<%- else -%>
					<a href="/<%= page - 1 -%>" rel="previous"><%= page - 1 -%></a>
				<%- end -%>
			<%- end -%>

			<%- # Next pagination-number links to current page + 1 -%>
			<span class="current"><%= page -%></span>
			<%- if page < total_pages - 1 -%>
				<a href="/<%= page + 1 -%>" rel="next"><%= page + 1 -%></a>
			<%- end -%>

			<%- if page < total_pages - gap -%>
				<%- if page == total_pages - gap -%>
					<a href="/<%= total_pages -%>"><%= total_pages -%></a>
				<%- else -%>
					<%- # Since we always display current page + next one and last page,
							# if the gap between current page and last page + 1 < gap * 2, the gap is redundant; it would display,
							# for example 5 6 ... 7 8. Also, showing 4 5 .. 7 8 takes same space as 4 5 6 7 8. -%>
					<%- if (total_pages - page + 1) > gap * 2 -%>
						<span class="gap">&hellip;</span>
					<%- else -%>
						<a href="/<%= total_pages - 1 -%>"><%= total_pages - 1 -%></a>
					<%- end -%>
				<%- end -%>
			<%- end -%>

			<%- # next button disabled/enabled logic -%>
			<%- if page < total_pages -%>
				<a href="/<%= total_pages -%>"><%= total_pages -%></a>
				<a class="next" href="/<%= page + 1 -%>" rel="next">Next &rarr;</a>
			<%- else -%>
				<span class="disabled">Next &rarr;</span>
			<%- end -%>

		</nav>
	<%- end -%>
<%- end -%>
